# Credit Control System - Nginx API Gateway Configuration
# 基于公网IP访问的反向代理配置

events {
    worker_connections 1024;
}

http {
    # 基本配置
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream: $upstream_addr response_time: $upstream_response_time';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # 性能优化
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout 65;
    client_max_body_size 10m;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # 上游服务配置
    upstream customer-service {
        # 开发环境：直接连接到本地端口8081
        server localhost:8081 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # 其他微服务配置
    upstream credit-service {
        server localhost:8082 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream risk-service {
        server localhost:8083 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream payment-service {
        server localhost:8084 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream report-service {
        server localhost:8085 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream notification-service {
        server localhost:8086 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # 主服务器配置
    server {
        listen 8080;
        server_name 35.77.54.203 localhost;  # 支持公网IP和本地访问
        
        # 安全头配置
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # CORS配置 - 支持前端跨域访问
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
        
        # 处理OPTIONS预检请求
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # API网关根路径
        location / {
            return 200 '{"status":"OK","message":"Credit Control System API Gateway","version":"1.0.0","timestamp":"$time_iso8601","gateway_ip":"35.77.54.203","services":["customer","credit","risk","payment","report","notification"],"swagger_ui":"http://35.77.54.203:8080/swagger"}';
            add_header Content-Type application/json;
        }
        
        # Swagger UI 接口文档
        location /swagger {
            alias /usr/share/nginx/html/;
            try_files /swagger.html =404;
            add_header Content-Type "text/html; charset=utf-8";
        }
        
        # 网关健康检查
        location /health {
            return 200 '{"status":"UP","gateway":"nginx","timestamp":"$time_iso8601","uptime":"$upstream_response_time"}';
            add_header Content-Type application/json;
        }

        # ========== 客户服务路由 ==========
        location /api/v1/customers {
            # 健康检查
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            
            # 代理配置
            proxy_pass http://customer-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Gateway-IP 35.77.54.203;
            
            # 超时配置
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # 缓冲配置
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # ========== 其他微服务路由 (预留) ==========
        
        # 信用服务路由
        location /api/v1/credit {
            proxy_pass http://credit-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Gateway-IP 35.77.54.203;
            
            # 服务暂未启动时返回503
            proxy_intercept_errors on;
            error_page 502 503 504 @service_unavailable;
        }

        # 风险服务路由
        location /api/v1/risk {
            proxy_pass http://risk-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Gateway-IP 35.77.54.203;
            
            proxy_intercept_errors on;
            error_page 502 503 504 @service_unavailable;
        }

        # 付款服务路由
        location /api/v1/payments {
            proxy_pass http://payment-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Gateway-IP 35.77.54.203;
            
            proxy_intercept_errors on;
            error_page 502 503 504 @service_unavailable;
        }

        # 报表服务路由
        location /api/v1/reports {
            proxy_pass http://report-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Gateway-IP 35.77.54.203;
            
            proxy_intercept_errors on;
            error_page 502 503 504 @service_unavailable;
        }

        # 通知服务路由
        location /api/v1/notifications {
            proxy_pass http://notification-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Gateway-IP 35.77.54.203;
            
            proxy_intercept_errors on;
            error_page 502 503 504 @service_unavailable;
        }

        # ========== 监控和管理端点 ==========
        
        # 健康检查聚合端点
        location /api/v1/health {
            return 200 '{"gateway":"UP","timestamp":"$time_iso8601","services":{"customer":"http://localhost:8081/actuator/health","credit":"http://localhost:8082/actuator/health","risk":"http://localhost:8083/actuator/health","payment":"http://localhost:8084/actuator/health","report":"http://localhost:8085/actuator/health","notification":"http://localhost:8086/actuator/health"}}';
            add_header Content-Type application/json;
        }
        
        # API文档聚合
        location /api/v1/docs {
            return 200 '{"api_docs":"Credit Control System API Documentation","services":[{"name":"customer","url":"http://35.77.54.203:8080/api/v1/customers/info"},{"name":"credit","url":"http://35.77.54.203:8080/api/v1/credit/info"},{"name":"risk","url":"http://35.77.54.203:8080/api/v1/risk/info"},{"name":"payment","url":"http://35.77.54.203:8080/api/v1/payments/info"},{"name":"report","url":"http://35.77.54.203:8080/api/v1/reports/info"},{"name":"notification","url":"http://35.77.54.203:8080/api/v1/notifications/info"}],"gateway_info":"Nginx API Gateway v1.0","public_ip":"35.77.54.203"}';
            add_header Content-Type application/json;
        }

        # ========== 错误处理 ==========
        
        # 服务不可用处理
        location @service_unavailable {
            return 503 '{"error":"Service Unavailable","message":"The requested microservice is currently unavailable","timestamp":"$time_iso8601","gateway":"nginx","suggestion":"Please try again later or contact support"}';
            add_header Content-Type application/json;
        }
        
        # 404错误处理
        error_page 404 = @not_found;
        location @not_found {
            return 404 '{"error":"Not Found","message":"The requested API endpoint was not found","timestamp":"$time_iso8601","available_endpoints":["/api/v1/customers","/api/v1/credit","/api/v1/risk","/api/v1/payments","/api/v1/reports","/api/v1/notifications"],"gateway":"nginx"}';
            add_header Content-Type application/json;
        }
        
        # 5xx错误处理
        error_page 500 502 503 504 = @server_error;
        location @server_error {
            return 500 '{"error":"Internal Server Error","message":"Gateway encountered an internal error","timestamp":"$time_iso8601","gateway":"nginx","contact":"support@creditcontrol.com"}';
            add_header Content-Type application/json;
        }
    }
}